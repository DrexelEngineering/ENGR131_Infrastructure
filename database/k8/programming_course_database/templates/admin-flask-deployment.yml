apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    name: admin-flask-{{.Values.Course.name | default "class"}} #ADMIN_SERVER_NAME
  name: admin-flask-{{.Values.Course.name | default "class"}} #ADMIN_SERVER_NAME
spec:
  progressDeadlineSeconds: 2147483647
  replicas: '{{ .Values.AdminFlask.replicaCount | default "2" }}' #ADMIN_SERVER_REPLICAS
  selector:
    matchLabels:
      app: admin-flask-{{.Values.Course.name | default "class"}} #ADMIN_SERVER_NAME
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: admin-flask-{{.Values.Course.name | default "class"}} #ADMIN_SERVER_NAME
    spec:
      containers:
        - env:
            - name: FLASK_ENV
              value: development
            - name: APP_SETTINGS
              value: project.config.DevelopmentConfig
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: postgres-credentials
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres-credentials
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: admin_pass
                  name: postgres-credentials
          image: '{{ .Values.AdminFlask.image | default "jagar2/admin_flask_server:2.0.5" }}' #ADMIN_SERVER_CONTAINER
          imagePullPolicy: Always
          name: admin-flask-{{.Values.Course.name | default "class"}}
          resources:
            limits:
              memory: '{{ .Values.AdminFlask.limits.memory | default "12Gi" }}' #ADMIN_MEM_MAX
              cpu: '{{ .Values.AdminFlask.limits.cpu | default "4" }}' #ADMIN_CPU_MAX
            requests:
              memory: '{{ .Values.AdminFlask.requests.memory | default "6Gi" }}' #ADMIN_MEM_MIN
              cpu: '{{ .Values.AdminFlask.requests.cpu | default "2" }}' #ADMIN_CPU_MIN
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: regcred
